class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int end = -1;
        int fin = 0;
        for(int i = 0; i < piles.length; i++){
            end = end > piles[i] ? end : piles[i];
        }
        int start = 0;
        int mid = start + (end - start) / 2;
        while(start <= end){
            mid = start + (end - start) / 2;
            if(!check(piles, h, mid)){
                start = mid + 1;
            }
            else{
                fin = mid;
                end = mid - 1;
            }
        }
        return fin;
    }
    static boolean check(int[] piles, int h, int mid){
        double sum = 0;
        for(int i = 0; i < piles.length; i++){
            sum += Math.ceil((double)piles[i] / (double)mid);
        }
        if(sum > h){
            return false;
        }
        return true;
    }
}
