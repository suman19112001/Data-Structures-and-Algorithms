class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int max = 0;
        int sum = 0;
        for(int i = 0; i < weights.length; i++){
            max = Math.max(weights[i], max);
            sum += weights[i];
        }
        int low = max;
        int high = sum;
        if(days == weights.length) return max;
        int ans = -1;
        while(low <= high){
            int mid = low + (high - low) / 2;
            if(CanShipCargo(weights, mid, days)){
                ans = mid;
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        return ans;
    }
    private boolean CanShipCargo(int[] weights, int max, int days){
        int count_days = 1;
        int count_weights = 0;
        for(int i = 0; i < weights.length; i++){
            if(count_weights + weights[i] > max){
                count_days++;
                count_weights = weights[i];
            }
            else{
                count_weights += weights[i];
            }
        }
        return count_days <= days;
    }
}
